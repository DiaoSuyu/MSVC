<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TypesFilter" xml:space="preserve">
    <value>搜索类型名</value>
    <comment>Filter Caption for types view</comment>
  </data>
  <data name="InstancesFilter" xml:space="preserve">
    <value>搜索值</value>
    <comment>Filter Caption for instances view</comment>
  </data>
  <data name="LoadRowDataText" xml:space="preserve">
    <value>正在检索...</value>
  </data>
  <data name="ContextMenuAddWatch" xml:space="preserve">
    <value>添加监视</value>
    <comment>Context Menu Add Watch</comment>
  </data>
  <data name="ContextMenuQuickWatch" xml:space="preserve">
    <value>快速监视</value>
    <comment>Context Menu Quick Watch</comment>
  </data>
  <data name="ContextMenuCopy" xml:space="preserve">
    <value>复制</value>
    <comment>Context Menu Label</comment>
  </data>
  <data name="SelectDefault" xml:space="preserve">
    <value>选择基线</value>
    <comment>Drop Down Initial Default</comment>
  </data>
  <data name="GridLastRow" xml:space="preserve">
    <value>未显示 {0} 个类型。</value>
    <comment>The last row in a grid</comment>
  </data>
  <data name="GridTrimLimit" xml:space="preserve">
    <value>[显示了 {0} 个实例]</value>
    <comment>The last row in a trimmed view</comment>
  </data>
  <data name="ObjectNotAvailable" xml:space="preserve">
    <value>当前快照中未提供该类型的对象。</value>
    <comment>Text on Expand</comment>
  </data>
  <data name="RefGraphHeader" xml:space="preserve">
    <value>引用关系图</value>
    <comment>Graph view header</comment>
  </data>
  <data name="ManagedMemoryLabelWithProcessName" xml:space="preserve">
    <value>托管内存({0})</value>
    <comment>MMA caption - Managed Memory (process name)</comment>
  </data>
  <data name="SummaryViewSize" xml:space="preserve">
    <value>{0}KB</value>
    <comment>MMA caption - (total size)KB</comment>
  </data>
  <data name="ManagedSummaryCount" xml:space="preserve">
    <value>{0} 对象</value>
    <comment>MMA caption - (total count) objects</comment>
  </data>
  <data name="SummaryViewBaseline" xml:space="preserve">
    <value>基线</value>
    <comment>Shown instead of diff numbers for the first snapshot</comment>
  </data>
  <data name="SummaryViewButton" xml:space="preserve">
    <value>拍摄快照</value>
    <comment>Text that appears on the take snapshot button</comment>
  </data>
  <data name="ManagedMemoryLabel" xml:space="preserve">
    <value>托管内存</value>
    <comment>MMA Caption - Managed Memory</comment>
  </data>
  <data name="ViewSettingsMenuCaption" xml:space="preserve">
    <value>视图设置</value>
    <comment>View Setting menu caption element</comment>
  </data>
  <data name="ViewSettingsJustMyCodeMenuItem" xml:space="preserve">
    <value>仅我的代码</value>
    <comment>Just My Code menu item in view settings menu</comment>
  </data>
  <data name="NotificationBarJMCEnabled" xml:space="preserve">
    <value>仅我的代码</value>
    <comment>Notification bar displays this message when JMC is on</comment>
  </data>
  <data name="NotificationBarCollapseSmallObjectsEnabled" xml:space="preserve">
    <value>折叠小型对象类型</value>
    <comment>Notification bar displays this message when Collapse Small Object Types is on</comment>
  </data>
  <data name="NotificationBarMessage" xml:space="preserve">
    <value>视图设置已筛选一些对象类型({0})</value>
    <comment>Notification bar message</comment>
  </data>
  <data name="NotificationBarStaleMessage" xml:space="preserve">
    <value>快照未反映当前程序的状态。值不可用。</value>
    <comment>Notification bar message for stale instances view</comment>
  </data>
  <data name="ReferencesViewNoViewMessage" xml:space="preserve">
    <value>视图设置不适用于引用的对象视图</value>
    <comment>Tooltip message that appears in the reference objects view when a view setting is on</comment>
  </data>
  <data name="CompareToCaption" xml:space="preserve">
    <value>与之比较的对象:</value>
    <comment>Compare to Label</comment>
  </data>
  <data name="InstancesOfHeader" xml:space="preserve">
    <value>{0} 的实例</value>
    <comment>Instances of type header</comment>
  </data>
  <data name="BackButtonType" xml:space="preserve">
    <value>类型</value>
    <comment>The type of the view the back button returns to</comment>
  </data>
  <data name="ViewInstancesTooltip" xml:space="preserve">
    <value>{0} 的视图实例</value>
    <comment>The tooltip for view instances icon</comment>
  </data>
  <data name="HighContrastUnsupportedBrowserMessage" xml:space="preserve">
    <value>在高对比度模式下，此内容需要新版本的 Internet Explorer</value>
    <comment>Message displayed when IE version isn't supported in High Contrast Mode</comment>
  </data>
  <data name="ContextMenuGoToDefinition" xml:space="preserve">
    <value>转到定义</value>
    <comment>The context menu item text for go to definition</comment>
  </data>
  <data name="ContextMenuFindAllReferences" xml:space="preserve">
    <value>查找所有引用</value>
    <comment>The context menu item text for find all references</comment>
  </data>
  <data name="NativeMemoryLabel" xml:space="preserve">
    <value>本机内存</value>
    <comment>Native Memory</comment>
  </data>
  <data name="NativeMemoryLabelWithProcessName" xml:space="preserve">
    <value>本机内存 ({0})</value>
    <comment>Native Memory with process name</comment>
  </data>
  <data name="ContextMenuGotoSource" xml:space="preserve">
    <value>转到源代码</value>
    <comment>Goto source code</comment>
  </data>
  <data name="DisplayStackView" xml:space="preserve">
    <value>单击每个实例以显示其分配的调用堆栈。</value>
    <comment>Click on each of the instances to display their allocated call stack. </comment>
  </data>
  <data name="GotoInstancesView" xml:space="preserve">
    <value>通过单击类型行或单击类型行上的视图实例图标来转到实例视图。</value>
    <comment>Go to instances view by double clicking the type row or clicking on view instance icon on the types row.</comment>
  </data>
  <data name="FrameLanguage" xml:space="preserve">
    <value>框架的语言</value>
    <comment>Language of the frame</comment>
  </data>
  <data name="SpecialIndication" xml:space="preserve">
    <value>箭头代表分配框架</value>
    <comment>Arrow represents the allocation frame</comment>
  </data>
  <data name="StackFrames" xml:space="preserve">
    <value>堆栈帧</value>
    <comment>Stack Frames</comment>
  </data>
  <data name="CompareSnapshotContext" xml:space="preserve">
    <value>比较对象</value>
    <comment>Context menu entry for compare snapshot submenu</comment>
  </data>
  <data name="DeleteSnapshotContext" xml:space="preserve">
    <value>删除快照</value>
    <comment>Context menu entry for snapshot deletion</comment>
  </data>
  <data name="SummaryViewTimestamp" xml:space="preserve">
    <value>({0})</value>
    <comment>Format for displaying timestamp for snapshot summary tiles</comment>
  </data>
  <data name="SnapshotProgressCancel" xml:space="preserve">
    <value>取消</value>
    <comment>Cancel link text for during snapshot analysis</comment>
  </data>
  <data name="SnapshotProgressCaptionDefault" xml:space="preserve">
    <value>正在运行...</value>
    <comment>Default value for the take snapshot button progress indicator</comment>
  </data>
  <data name="NativeSummaryCount" xml:space="preserve">
    <value>{0} 分配</value>
    <comment>MMA caption - (total allocations) allocations</comment>
  </data>
  <data name="SummaryViewTypeManaged" xml:space="preserve">
    <value>托管</value>
    <comment>Summary view tile section header for managed heap</comment>
  </data>
  <data name="SummaryViewTypeNative" xml:space="preserve">
    <value>本机</value>
    <comment>Summary view tile section header for native heap</comment>
  </data>
  <data name="ContextMenuMore" xml:space="preserve">
    <value>更多...</value>
    <comment>Context menu entry for more diffs</comment>
  </data>
  <data name="AllocationCallStack" xml:space="preserve">
    <value>分配调用堆栈</value>
    <comment>Name of the window that shows callstack of the allocating object.</comment>
  </data>
  <data name="AlertNativeCollectionUnavailable" xml:space="preserve">
    <value>本机收集器目前不可用。无法拍摄本机快照。</value>
    <comment>Alert message for when the native collector is unavailable</comment>
  </data>
  <data name="MultipleHeapSessionStartupError" xml:space="preserve">
    <value>无法启动本机内存剖析会话，因为已经有一个堆会话正在进行。Windows 在每台计算机上仅支持一个活动的堆会话。请尝试关闭其他 Visual Studio 实例或其他性能分析工具。</value>
    <comment>Unable to start native memory profiling session as there is already a heap session in progress. Windows supports only one active heap session per machine. Try closing other Visual Studio instances or other performance analysis tools.</comment>
  </data>
  <data name="UnableToStartNativeMemoryProfiling" xml:space="preserve">
    <value>因内部错误无法启动本机内存分析会话。请关闭 Visual Studio 实例，然后重试。</value>
    <comment>Unable to start native memory profiling session due to an internal error. Please close the Visual studio  instance and try again.</comment>
  </data>
  <data name="NativeCollectorDisabled" xml:space="preserve">
    <value>启用快照以获取特定时间点的内存使用情况的详细快照并作比较。&lt;br/&gt;这将对进行调试的进程的性能产生影响。</value>
  </data>
  <data name="EnableSnapshotsCaption" xml:space="preserve">
    <value>启用快照(应用于下一个调试会话)</value>
  </data>
  <data name="TypesObjectsEmptyMessage" xml:space="preserve">
    <value>已从这个视图筛选所有项。如要查看所有可用项，请重置视图设置并清除任何搜索条件。</value>
    <comment>Message for when there are no types visible</comment>
  </data>
  <data name="NotificationBarHideUnresolvedAllocationsEnabled" xml:space="preserve">
    <value>隐藏未解析的分配</value>
    <comment>Notification bar displays this message when Hide Unresolved Allocations is on</comment>
  </data>
  <data name="ViewSettingsHideUnresolvedAllocationsMenuItem" xml:space="preserve">
    <value>隐藏未解析的分配</value>
    <comment>View Settings menu item for Hide Unresolved Allocations</comment>
  </data>
  <data name="NewAllocationCount" xml:space="preserve">
    <value>新的分配计数</value>
    <comment>New Allocation count column name</comment>
  </data>
  <data name="NewAllocationCountToolTip" xml:space="preserve">
    <value>当前快照和基线快照之间发生的非瞬态分配计数</value>
    <comment>Tooltip for New Allocation count column in the diff. view</comment>
  </data>
  <data name="InstanceAgeInMilliSeconds" xml:space="preserve">
    <value>期限(毫秒)</value>
    <comment>Age (ms)</comment>
  </data>
  <data name="InstanceAgeInMilliSecondsTooltip" xml:space="preserve">
    <value>自有关当前快照的实例创建后所经过的时间(以毫秒为单位)。</value>
    <comment>Time elapsed (in milliseconds) since the creation of this instance with respect to the current snapshot.</comment>
  </data>
  <data name="AllocationStackEmptyMessage" xml:space="preserve">
    <value>无法显示此分配的分配调用堆栈。</value>
    <comment>Unable to display allocation call stack for this allocation.</comment>
  </data>
  <data name="Identifier" xml:space="preserve">
    <value>标识符</value>
    <comment>Identifier column in Stacks view</comment>
  </data>
  <data name="IdentifierTooltip" xml:space="preserve">
    <value>分配的标识符</value>
    <comment>Tooltip of the identifier column in stacks view.</comment>
  </data>
  <data name="Module" xml:space="preserve">
    <value>模块</value>
    <comment>Module name of the stacks view column</comment>
  </data>
  <data name="ModuleTooltip" xml:space="preserve">
    <value>发生堆栈帧的模块</value>
    <comment>Tooltip for module column in stacks view</comment>
  </data>
  <data name="StackViewCount" xml:space="preserve">
    <value>计数</value>
    <comment>Count column in Stacks view</comment>
  </data>
  <data name="StackViewCountTooltip" xml:space="preserve">
    <value>未释放分配数</value>
    <comment>Tooltip of the count column in stacks view</comment>
  </data>
  <data name="StackViewDiffCount" xml:space="preserve">
    <value>计数差异</value>
    <comment>Count diff column for stacks view</comment>
  </data>
  <data name="StackViewDiffCountTooltip" xml:space="preserve">
    <value>两个选定快照之间的未释放计数中的差异</value>
    <comment>Tooltip for count diff column in stacks view</comment>
  </data>
  <data name="StackViewDiffSize" xml:space="preserve">
    <value>大小差异</value>
    <comment>Size diff column for stacks view</comment>
  </data>
  <data name="StackViewDiffSizeTooltip" xml:space="preserve">
    <value>两个选定快照之间的未释放大小(以字节为单位)中的差异</value>
    <comment>Tooltip for size diff column in stacks view</comment>
  </data>
  <data name="StackViewSizeTooltip" xml:space="preserve">
    <value>未释放分配的大小(以字节为单位)</value>
    <comment>tooltip for stacks view size column</comment>
  </data>
  <data name="StackViewTotalSize" xml:space="preserve">
    <value>大小</value>
    <comment>Size coumn in stacks view</comment>
  </data>
  <data name="ViewMode" xml:space="preserve">
    <value>视图模式:</value>
    <comment>View Mode: label</comment>
  </data>
  <data name="ViewModeStackView" xml:space="preserve">
    <value>堆栈视图</value>
    <comment>Stacks View in the the view combo box mode option</comment>
  </data>
  <data name="ViewModeTypesView" xml:space="preserve">
    <value>类型视图</value>
    <comment>Types View in the view mode combo box option</comment>
  </data>
  <data name="NativeTypesObjectsEmptyMessage" xml:space="preserve">
    <value>此视图中没有要显示的新项</value>
    <comment>Message for when there are no new instances available for native heap</comment>
  </data>
  <data name="AllocationCallStackLanguage" xml:space="preserve">
    <value>语言</value>
    <comment>Language of the frame in allocation callstack</comment>
  </data>
  <data name="AllocationCallStackName" xml:space="preserve">
    <value>名称</value>
    <comment>Frame Name in the allcation callstack</comment>
  </data>
  <data name="SwitchToTypesViewForInstances" xml:space="preserve">
    <value>此视图模式不支持实例视图。将模式切换为“{0}”以查看实例。</value>
    <comment>Looking at instances is not supported in this view. Switch mode to '{0} ' to look at instances.</comment>
  </data>
  <data name="SnapshotTooltipNativeCount" xml:space="preserve">
    <value>分配: {0}</value>
  </data>
  <data name="SnapshotTooltipManagedCount" xml:space="preserve">
    <value>活动对象: {0}</value>
  </data>
  <data name="SnapshotTooltipNativeSize" xml:space="preserve">
    <value>堆: {0}</value>
    <comment>The size of the heap will be localized into it with the units provided above, such as "Heap: 123KB"</comment>
  </data>
  <data name="SnapshotTooltipManagedSize" xml:space="preserve">
    <value>托管堆: {0}</value>
    <comment>The size of the heap will be localized into it with the units provided above, such as "Managed heap: 123KB"</comment>
  </data>
  <data name="GcTooltipGenerationNumber" xml:space="preserve">
    <value>第 {0} 代 GC</value>
    <comment>Generation of the garbage collection "Generation: 1"</comment>
  </data>
  <data name="GcTooltipDuration" xml:space="preserve">
    <value>持续时间: {0}</value>
    <comment>Duration of the garbage collection. A localized time will be formatted into the string "Duration: 3.2ms"</comment>
  </data>
  <data name="GcTooltipForced" xml:space="preserve">
    <value>已强制</value>
  </data>
  <data name="GcTooltipUnforced" xml:space="preserve">
    <value>已取消强制</value>
  </data>
  <data name="AllocationList" xml:space="preserve">
    <value>分配</value>
    <comment>Allocations. The header of allocation list</comment>
  </data>
  <data name="AllocationListIdentifier" xml:space="preserve">
    <value>标识符</value>
    <comment>Identifier column header</comment>
  </data>
  <data name="AllocationListIdentifierToolTip" xml:space="preserve">
    <value>发生分配的函数的名称。</value>
    <comment>Tooltip for identifier column in allocation list</comment>
  </data>
  <data name="AllocationListInstance" xml:space="preserve">
    <value>实例</value>
    <comment>Instance in allocation list column header</comment>
  </data>
  <data name="AllocationListInstanceTooltip" xml:space="preserve">
    <value>分配地址</value>
    <comment>Tooltip for instance column in allocation list</comment>
  </data>
  <data name="AllocationListModule" xml:space="preserve">
    <value>模块</value>
    <comment>Module Column header</comment>
  </data>
  <data name="AllocationListModuleTooltip" xml:space="preserve">
    <value>发生堆栈帧的模块</value>
    <comment>Module column tooltip in allocation list</comment>
  </data>
  <data name="AllocationListSize" xml:space="preserve">
    <value>大小(字节)</value>
    <comment>Size Column header</comment>
  </data>
  <data name="AllocationListSizeToolTip" xml:space="preserve">
    <value>分配给此对象的字节数。</value>
    <comment>Size column in allocation list tooltip</comment>
  </data>
  <data name="AllocationListType" xml:space="preserve">
    <value>对象类型</value>
    <comment>Object Type Column header</comment>
  </data>
  <data name="AllocationListTypeTooltip" xml:space="preserve">
    <value>对象的完整类型名称</value>
    <comment>The full type name of the objects</comment>
  </data>
  <data name="AllocationListValue" xml:space="preserve">
    <value>值</value>
    <comment>Objects view value column header</comment>
  </data>
  <data name="AllocationListValueTooltip" xml:space="preserve">
    <value>对象值</value>
    <comment>Objects view value tooltip</comment>
  </data>
  <data name="SelectIdentifierForAllocationList" xml:space="preserve">
    <value>选择标识符以显示其分配。</value>
    <comment>Select an identifier to show its allocations.</comment>
  </data>
  <data name="SearchResultNotFound" xml:space="preserve">
    <value>没有可用结果</value>
    <comment>Inform user that search didn't find any results.</comment>
  </data>
  <data name="SelectIdentifierToShowAllocations" xml:space="preserve">
    <value>选择标识符以查看可归属于该堆栈帧的分配。</value>
    <comment>Select an identifier to view the allocations attributable to that stack frame.</comment>
  </data>
  <data name="ObjectsFilterTooltipDisabled" xml:space="preserve">
    <value>当快照不是最新状态时，无法按值筛选实例。</value>
    <comment>Tooltip for the the search filter while in the objects view, when object values are not visible.</comment>
  </data>
  <data name="ObjectsFilterTooltipEnabled" xml:space="preserve">
    <value>按值筛选实例。</value>
    <comment>Tooltip for the the search filter while in the objects view, when object values are visible.</comment>
  </data>
  <data name="TypesFilterTooltip" xml:space="preserve">
    <value>按类型名筛选。</value>
    <comment>Tooltip for the the search filter while in the types/stacks view.</comment>
  </data>
  <data name="AggregatedStackViewSearchCaption" xml:space="preserve">
    <value>搜索堆栈帧</value>
    <comment>Search caption for aggregated stacks view</comment>
  </data>
  <data name="AggregatedStackViewSearchToolTip" xml:space="preserve">
    <value>使用函数名搜索堆栈帧。</value>
    <comment>Tooltip for the search box in the aggregated stacks view</comment>
  </data>
  <data name="AggregationToggleBottom" xml:space="preserve">
    <value>被调用方</value>
    <comment>Aggregate stacks by "Callee"</comment>
  </data>
  <data name="AggregationToggleTabLabel" xml:space="preserve">
    <value>聚合调用堆栈依据:</value>
    <comment>Stack View Aggregation Direction Toggle label</comment>
  </data>
  <data name="AggregationToggleTop" xml:space="preserve">
    <value>调用方</value>
    <comment>Aggregate stacks by "Caller"</comment>
  </data>
  <data name="CalleesToggleButtonTooltip" xml:space="preserve">
    <value>根据堆栈中的底部帧进行聚合</value>
    <comment>Aggregated by the Bottom frame in the stack</comment>
  </data>
  <data name="CallersToggleButtonTooltip" xml:space="preserve">
    <value>根据堆栈中的顶部帧进行聚合</value>
    <comment>Aggregated by the Top frame in the stack</comment>
  </data>
  <data name="UnresolvedAllocationsString" xml:space="preserve">
    <value>未解析的分配</value>
    <comment>If we are unable to determine the type of the allocations then it is attributed to this row called "Unresolved allocations". This translation must match the translated string in Razor\PackageResources.resx</comment>
  </data>
  <data name="UnresolvedAllocationsTooltip" xml:space="preserve">
    <value>此组中表示的每个分配的数据类型无法确定，原因如下
    
        1.  无法找到执行分配的代码的 PDB。
        2.  源代码是使用早期的编译器生成的。使用 19.0 或更高版本生成内存分配符号。
        3.  应用程序使用专用堆分配器。仅支持 Windows 堆上的分配。</value>
    <comment>If the type of the allocations can not be determined then it shown to the user as "Unresolved allocations". The Tooltip provides information about possible reasons on why we are not able to determine the type for those allocations.</comment>
  </data>
  <data name="NativeHeapSelectComboBoxLabel" xml:space="preserve">
    <value>堆</value>
    <comment>Label for heap select combo box</comment>
  </data>
  <data name="CustomHeapNameDisplay" xml:space="preserve">
    <value>(堆: {0})</value>
    <comment>Custom Heap name that will be appened after process name</comment>
  </data>
  <data name="GoBackLinkCaption" xml:space="preserve">
    <value>向后导航</value>
    <comment>Go back button caption element</comment>
  </data>
  <data name="AggStacksGraphName" xml:space="preserve">
    <value>聚合堆栈</value>
  </data>
  <data name="AllocationsGraphName" xml:space="preserve">
    <value>分配</value>
  </data>
  <data name="StacksGraphName" xml:space="preserve">
    <value>堆栈</value>
  </data>
  <data name="TypesGraphName" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="AccessKeyCtrlC" xml:space="preserve">
    <value>Ctrl+C</value>
    <comment>Access key combination for Ctrl+C keystroke</comment>
  </data>
  <data name="AccessKeyShiftF9" xml:space="preserve">
    <value>Shift+F9</value>
    <comment>Access key combination for Shift+F9 keystroke</comment>
  </data>
  <data name="AccessKeyShiftAltF9" xml:space="preserve">
    <value>Shift+Alt+F9</value>
    <comment>Access key combination for Shift+Alt+F9 keystroke</comment>
  </data>
  <data name="AccessKeyF12" xml:space="preserve">
    <value>F12</value>
    <comment>Access key combination for F12 keystroke</comment>
  </data>
  <data name="AccessKeyShiftF12" xml:space="preserve">
    <value>Shift+F12</value>
    <comment>Access key combination for Shift+F12 keystroke</comment>
  </data>
  <data name="AccessKeyEnter" xml:space="preserve">
    <value>Enter</value>
    <comment>Access key combination for Enter keystroke</comment>
  </data>
  <data name="TypesFilterName" xml:space="preserve">
    <value>类型名称</value>
    <comment>Will be used as the name of the type filter element</comment>
  </data>
  <data name="LiveMemorySnapshotGridName" xml:space="preserve">
    <value>内存快照网格</value>
    <comment>Title for the container of the snapshot data grid</comment>
  </data>
  <data name="GridCellEmpty" xml:space="preserve">
    <value>空白单元格</value>
    <comment>Used for accessibility purposes, it enables narrator to communicate to the user that a grid cell is empty.</comment>
  </data>
  <data name="SortedAscending" xml:space="preserve">
    <value>升序排序</value>
    <comment>Aria label for sorting icon</comment>
  </data>
  <data name="SortedDescending" xml:space="preserve">
    <value>降序排序</value>
    <comment>Aria label for sorting icon</comment>
  </data>
</root>